"""empty message

Revision ID: a9a965ca155b
Revises: 
Create Date: 2020-04-10 14:48:37.324779

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a9a965ca155b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('warehouse')
    op.drop_index('ix_address_postal_code', table_name='address')
    op.drop_table('address')
    op.drop_table('worker')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.drop_index('ix_delivery_date', table_name='delivery')
    op.drop_table('delivery')
    op.drop_index('ix_order_date', table_name='order')
    op.drop_table('order')
    op.drop_table('supplier')
    op.drop_index('ix_customer_user_id', table_name='customer')
    op.drop_table('customer')
    op.drop_index('ix_product_name', table_name='product')
    op.drop_table('product')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='product_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_product_name', 'product', ['name'], unique=True)
    op.create_table('customer',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('customer_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('address_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('second_name', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], name='customer_address_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='customer_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='customer_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_customer_user_id', 'customer', ['user_id'], unique=True)
    op.create_table('supplier',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('supplier_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('address_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], name='supplier_address_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='supplier_product_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='supplier_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='supplier_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('order',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], name='order_customer_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='order_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_pkey')
    )
    op.create_index('ix_order_date', 'order', ['date'], unique=False)
    op.create_table('delivery',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='delivery_product_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], name='delivery_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='delivery_pkey')
    )
    op.create_index('ix_delivery_date', 'delivery', ['date'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=True)
    op.create_table('worker',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('second_name', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('position', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='worker_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='worker_pkey'),
    sa.UniqueConstraint('user_id', name='worker_user_id_key')
    )
    op.create_table('address',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('city', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('postal_code', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='address_pkey')
    )
    op.create_index('ix_address_postal_code', 'address', ['postal_code'], unique=True)
    op.create_table('warehouse',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='warehouse_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='warehouse_pkey'),
    sa.UniqueConstraint('product_id', name='warehouse_product_id_key')
    )
    # ### end Alembic commands ###
